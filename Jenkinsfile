pipeline {
    agent { label 'agent1' }

// ‚û§‚û§‚û§ –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ environment –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫—ç—à–∞
    environment {
// –õ–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ Jenkins (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ø–æ—Å–æ–±)
        GRADLE_REMOTE_CACHE_USERNAME = "${env.GRADLE_REMOTE_CACHE_USERNAME}"
        GRADLE_REMOTE_CACHE_PASSWORD = "${env.GRADLE_REMOTE_CACHE_PASSWORD}"
// URL –∫—ç—à–∞ –∏–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Jenkins (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω)
        GRADLE_REMOTE_CACHE_URL = "${env.GRADLE_REMOTE_CACHE_URL ?: 'http://192.168.0.109:5071/cache/'}"
        DOTENV_FILE = "/var/agent-jdk21/env/.env.develop"
    }

    tools {
        git 'Default'
    }

    stages {
        stage('Init') {
            steps {
                script {
                     runGradleTask = load 'scripts/gradleUtils.groovy'
                     sh 'chmod +x ./gradlew'
                }
            }
        }

        stage('Checkstyle') {
            steps {
                script {
                    runGradleTask('checkstyleMain checkstyleTest', 'Checkstyle FAILED', DOTENV_FILE)
                }
            }
        }

        stage('Compile') {
            steps {
                script {
                    runGradleTask('compileJava', 'Compilation FAILED', DOTENV_FILE)
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    runGradleTask('test', 'Tests FAILED', DOTENV_FILE)
                }
            }
        }

        stage('Code Coverage') {
            steps {
                script {
                    runGradleTask('jacocoTestReport jacocoTestCoverageVerification', 'Code coverage FAILED', DOTENV_FILE)
                }
            }
        }

// refresh-dependencies –∑–∞—Å—Ç–∞–≤–∏—Ç Gradle –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –∑–∞–ø–∏—Å–∞—Ç—å –∏—Ö –≤ —É–¥–∞–ª—ë–Ω–Ω—ã–π –∫—ç—à.
        stage('Build') {
            steps {
                script {
                    try {
                        sh """
                            ./gradlew clean build \\
                            --build-cache \\
                            --refresh-dependencies \\
                            --info \\
                            --debug \\
                            -x test \\
                            -P\"dotenv.filename\"=\"${DOTENV_FILE}\" \\
                            -Dgradle.cache.remote.url=${GRADLE_REMOTE_CACHE_URL} \\
                            -Dgradle.cache.remote.username=${GRADLE_REMOTE_CACHE_USERNAME} \\
                            -Dgradle.cache.remote.password=${GRADLE_REMOTE_CACHE_PASSWORD}
                        """
                        telegramSend(message: "‚úÖ Build SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}\nView build: ${env.BUILD_URL}")
                    } catch (e) {
                        telegramSend(message: "‚ùå Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER}\nView build: ${env.BUILD_URL}")
                        error "Build failed"
                    }
                }
            }
        }

        stage('Update DB') {
            steps {
                script {
                    runGradleTask('update', 'Update DB FAILED', DOTENV_FILE)
                }
            }
        }
    }

// ‚û§‚û§‚û§ –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ post –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
    post {
        always {
            script {
                def buildInfo = "üìä Build Info:\n" +
                        "Job: ${env.JOB_NAME}\n" +
                        "Build #: ${currentBuild.number}\n" +
                        "Status: ${currentBuild.currentResult}\n" +
                        "Duration: ${currentBuild.durationString}\n" +
                        "View build: ${env.BUILD_URL}"
                telegramSend(message: buildInfo)
            }
        }

        success {
            echo "Build succeeded!"
        }

        failure {
            echo "Build failed!"
        }

        unstable {
            echo "Build unstable!"
            telegramSend(message: "‚ö†Ô∏è Build UNSTABLE: ${env.JOB_NAME} #${env.BUILD_NUMBER}")
        }
    }
}

// —à–∞–±–ª–æ–Ω
//pipeline {
//    agent { label 'agent1' }
//    environment { ... }
//    tools { ... }
//    stages { ... }
//    post { ... }
//}