# ✅Server
server.port=8081

# ✅Название приложения
spring.application.name=DevOps

# ✅Активный Spring профиль (по умолчанию — local)${SPRING_PROFILES_ACTIVE:local}
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# Отключаем баннер при старте
spring.main.banner-mode=off

# ✅Логирование
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
# Optional: for debugging Liquibase
logging.level.liquibase=DEBUG


# ✅JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.use_sql_comments=true
# Логирование SQL-запросов
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ✅DB properties - Настройки подключения к БД (используем переменные окружения)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/job4j_devops?currentSchema=public&characterEncoding=UTF-8}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}

# ✅Liquibase (тоже через переменные окружения)
spring.liquibase.change-log=${SPRING_LIQUIBASE_CHANGELOG_MASTER:classpath:db/changelog/db.changelog-master.xml}
spring.liquibase.url=${SPRING_LIQUIBASE_URL:jdbc:postgresql://localhost:5432/job4j_devops?currentSchema=public&characterEncoding=UTF-8}
spring.liquibase.user=${SPRING_LIQUIBASE_USER:postgres}
spring.liquibase.password=${SPRING_LIQUIBASE_PASSWORD:password}
spring.liquibase.enabled=${SPRING_LIQUIBASE_ENABLED:true}
spring.liquibase.driver-class-name=org.postgresql.Driver

 # Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# ✅Kafka config
spring.kafka.bootstrap-servers=localhost:9092
## Kafka producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
## Kafka consumer
spring.kafka.consumer.group-id=job4j
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=ru.job4j.devops.models

